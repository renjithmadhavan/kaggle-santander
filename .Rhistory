source("http://bioconductor.org/biocLite.R")
biocLite("rtracklayer")
source("http://bioconductor.org/biocLite.R")
biocLite("ShortRead")
library("ShortRead")
help(package="ShortRead")
?readFastq
biocLite("rtracklayer")
help(package="rtracklayer")
help(package="mirbase")
biocLite("mirbase.db")
source("http://www.bioconductor.org/biocLite.R")
biocLite("mirbase.db")
ls("package:mirbase.db")
engine <- read.csv(file="~/Downloads/table_7_3.csv",sep-",",head=TRUE)
engine <- read.csv(file="~/Downloads/table_7_3.csv",sep=",",head=TRUE)
names(engine)
summary(engine)
qqnorm(engine$co,main="Carbon Monoxide")
qqline(engine$co)
boxplot(engine$co,main="Carbon Monoxide")
hist(engine$co,main="Carbon Monoxide")
hist(engine$co,main="Carbon")
hist(engine$nox,main="Nox")
hist(engine$co,main="Carbon")
hist(engine$co,main="Carbon", engine$nox,main="Nox")
qqline(engine$co)
lengine <- log(engine$co)
engine#co
engine$co
boxplot(lengine,main="CO")
boxplot(engine$co,main="CO")
hist(lengine,main="CO")
qqnorm(lengine,main="QQ Plot")
qqline(lengine)
m <-mean(lengine)
s <-sd(lengine)
n <-length(lengine)
m
s
n
se <- s/sqrt(n)
se
error <-se*qt(0.975,df=n-1)
error
left <- m-error
right <- M+error
left
right <- m+error
left
right
exp(left)
exp(right)
lNull <- log(5.4)-error
rNull <- log(5.4)+error
1Null
lNull
rNull
m
2*(1-pt((m-log(5.4))/se,df=n-1)
exi
2*(1-pt((m-log(5.4))/se,df=n-1))
t.test(lengine, mu=log(5.4), alternative ="two.sided")
t.test
help t.test
t.test help
?t.test
t.test(lengine, mu=log(5.4))
library(XML)
library(Biobase)
library(annotate)
library(genefilter)
citation("Biobase")
libary(golubEsets)
library(golubEsets)
source("http://bioconductor.org/biocLite.R")
biocLite("tkWidgets")
ls()
plot(sin(seq(0, 2*pi, length=100)))
plot(sin(seq(0, 2*pi, length=10000)))
exam<-(94, 94, 94, 68.5, 90, 94, 76, 88, 88, 97, 85, 79, 98, 66, 69, 91, 71, 97.5, 77, 72, 94, 69)
exam=(94, 94, 94, 68.5, 90, 94, 76, 88, 88, 97, 85, 79, 98, 66, 69, 91, 71, 97.5, 77, 72, 94, 69)
exam<- c(94, 94, 94, 68.5, 90, 94, 76, 88, 88, 97, 85, 79, 98, 66, 69, 91, 71, 97.5, 77, 72, 94, 69)
hist(exam)
bins=seq(50, 100, by=10)
hist(exam, breaks=bins)
hist(exam, breaks=bins, col="lightblue", xlab="Score", ylab="Count", main="Exam 2")
bins=seq(50, 100, by=5)
hist(exam, breaks=bins, col="lightblue", xlab="Score", ylab="Count", main="Exam 2")
average(exam)
hist(exam)
hist(exam, breaks=bins, col="lightblue", xlab="Score", ylab="Count", main="Exam 2")
exam<- c(94, 94, 94, 68.5, 90, 94, 76, 88, 88, 97, 85, 79, 98, 66, 69, 91, 71, 97.5, 77, 72, 94, 69, 84)
hist(exam, breaks=bins, col="lightblue", xlab="Score", ylab="Count", main="Exam 2")
source("http://biocondctor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite(c("GenomicFeatures","AnnotationDbi"))
biocLite()
x=(1,2,4)
x<-(1,2,4)
x <- (1,2,4)
x <- (1, 2, 4)
x=c(1, 2, 4)
x
mean(x)
y=mean(x)
y
?datasets
library(help="datasets")
women
mean("women:height")
mean(women)
mean(Nile)
Nile
sd(Nile)
hist(Nile)
library("BiocInstaller", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
biocLite()
exam1 <- c(37.0, 45.5, 35.0, 41.0, 57.5, 29.5, 23.0, 30.5, 28.5, 39.5, 49.0, 44.0, 38.0, 45.5, 56.0, 47.5, 36.0, 38.0, 46.5, 27.0, 28.0, 51.0, 47.0)
hist(Exam1, col=rainbow(25, start=0, end=.3), breaks=15, xlim=c(20,60), ylim=c(0,10), main="Bio 111 Hultman 8:30, Exam 1", las=1)
hist(exam1, col=rainbow(25, start=0, end=.3), breaks=15, xlim=c(20,60), ylim=c(0,10), main="Bio 111 Hultman 8:30, Exam 1", las=1)
hist(exam1, col=rainbow(25, start=0, end=.3), breaks=15, xlim=c(10,60), ylim=c(0,10), main="Bio 111 Hultman 8:30, Exam 1", las=1)
hist(exam1, col=rainbow(25, start=0, end=.3), breaks=15, xlim=c(20,60), ylim=c(0,10), main="Bio 111 Hultman 8:30, Exam 1", las=1)
hist(exam1, col=rainbow(25, start=0, end=.3), breaks=15, xlim=c(20,60), ylim=c(0,5), main="Bio 111 Hultman 8:30, Exam 1", las=1)
exam1 <- c(41.0, 42.0, 39.5, 39.5, 39.0, 18.5, 40.0, 42.0, 42.5, 39.5, 45.5, 38.0, 53.5, 56.5, 40.0, 50.5, 39.0, 48.0, 41.5, 44.0, 42.0, 48.0, 43.5, 53.0)
hist(exam1, col=rainbow(25, start=0, end=.3), breaks=15, xlim=c(20,60), ylim=c(0,5), main="Bio 111 Hultman 8:30, Exam 1", las=1)
exam1a <- c(37.0, 45.5, 35.0, 41.0, 57.5, 29.5, 23.0, 30.5, 28.5, 39.5, 49.0, 44.0, 38.0, 45.5, 56.0, 47.5, 36.0, 38.0, 46.5, 27.0, 28.0, 51.0, 47.0)
hist(exam1a, col=rainbow(25, start=0, end=.3), breaks=15, xlim=c(20,60), ylim=c(0,5), main="Bio 111 Hultman 8:30, Exam 1", las=1)
data()
data(HairEyeColor)
HairEyeColor
data(InsectSprays)
InsectSprays
age <- c(23, 23, 27, 27, 39, 41, 47, 49, 50, 52, 54, 54, 56, 57, 58, 58, 60, 61)
percent.fat <- c(9.5, 26.5, 7.8, 17.8, 31.4, 25.9, 27.4, 27.2, 31.2, 34.6, 42.5, 28.8, 33.4, 30.2, 34.1, 32.9, 41.2, 35.7)
summary(age)
mean(age)
median(age)
sd(age)
?sd
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages(c("boot", "class", "cluster", "codetools", "digest", "foreign", "KernSmooth", "knitr", "lattice", "manipulate", "MASS", "Matrix", "mgcv", "nlme", "nnet", "Rcpp", "rpart", "spatial", "survival"))
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
sapply(train, function(col) sum(is.na(col)))
train <- read.csv("train.csv", stringsAsFactors = TRUE)
setwd("~/github/kaggle-santander")
train <- read.csv("train.csv", stringsAsFactors = TRUE)
test <- read.csv("test.csv", stringsAsFactors = TRUE)
save.image("~/github/kaggle-santander/SantanderWorkspace.RData")
dim(train)
colnames(train)
sapply(train, function(col) sum(is.na(col)))
sum(is.infinite(train))
sum(is.infinite(train[,1]))
sum(is.infinite(train[,2]))
sum(is.infinite(train))
?is.infinite
for (j in 1:ncol(train)) is.infinite(DT[[j]])))
for (j in 1:ncol(train)) is.infinite(DT[[j]]))
for (j in 1:ncol(train)) is.infinite(DT[[j]])
for (j in 1:ncol(train)) is.infinite(train[[j]])
inftest <- for (j in 1:ncol(train)) is.infinite(train[[j]])
fintest <- for (j in 1:ncol(train)) is.finite(train[[j]])
for (j in 1:ncol(train)) set(train, which(is.infinite(train[[j]])), j, NA)
?set
??set
train$TARGET <- as.factor(train$TARGET)
cols.to.factor <- sapply(train, function(col) (length(unique(col)) <= 2))
train[ , cols.to.factor] <- lapply(train[ , cols.to.factor] , factor)
str(train)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
